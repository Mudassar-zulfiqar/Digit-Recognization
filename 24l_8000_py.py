# -*- coding: utf-8 -*-
#https://www.kaggle.com/competitions/digit-recognizer/leaderboard 
#Click and check result by searching username(mudassarzulfiqar)

"""24l_8000.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QIpqZHNxWtJjEhaTppNszr8J11PRCCLv
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load the dataset
train_df = pd.read_csv("/content/train.csv")
test_df = pd.read_csv("/content/test.csv")

# Explore the data
print(train_df.head())
print(train_df.describe())

# Visualize the data
plt.figure(figsize=(10,10))
for i in range(9):
    plt.subplot(3, 3, i+1)
    plt.imshow(train_df.iloc[i, 1:].values.reshape(28, 28), cmap='gray')
    plt.title(f"Label: {train_df.iloc[i, 0]}")
    plt.axis('off')
plt.show()

# Normalize the data
X_train = train_df.iloc[:, 1:].values / 255.0
y_train = train_df.iloc[:, 0].values

X_test = test_df.values / 255.0

# Reshape the data for neural network input
X_train = X_train.reshape(-1, 28, 28, 1)
X_test = X_test.reshape(-1, 28, 28, 1)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.utils import to_categorical

# Convert labels to one-hot encoding
y_train = to_categorical(y_train, num_classes=10)

# Build the model
model = Sequential([
    Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(28, 28, 1)),
    MaxPooling2D(pool_size=(2, 2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=128, validation_split=0.2)

# Make predictions on the test set
predictions = model.predict(X_test)
predictions = np.argmax(predictions, axis=1)

# Prepare the submission file
submission = pd.DataFrame({'ImageId': list(range(1, len(predictions) + 1)), 'Label': predictions})
submission.to_csv("submission.csv", index=False)